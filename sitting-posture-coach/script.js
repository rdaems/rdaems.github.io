function lerpColor(e,t,a){const r=parseInt(e.replace(/#/g,""),16),o=r>>16,s=r>>8&255,n=255&r,i=parseInt(t.replace(/#/g,""),16);return`#${((1<<24)+(o+a*((i>>16)-o)<<16)+(s+a*((i>>8&255)-s)<<8)+(n+a*((255&i)-n))|0).toString(16).slice(1)}`}function hexToRGB(e,t){const a=parseInt(e.slice(1,3),16),r=parseInt(e.slice(3,5),16),o=parseInt(e.slice(5,7),16);return t?`rgba(${a}, ${r}, ${o}, ${t})`:`rgb(${a}, ${r}, ${o})`}function hasNoScore(){$("#loading-overlay").removeClass("hidden")}function hasScore(){$("#loading-overlay").addClass("hidden")}function updateUi(){const e=$("#range-slider").slider("values",0),t=$("#range-slider").slider("values",1),a=score;if(null!=a){let r=(a-e)/(t-e);r=Math.max(0,Math.min(1,r));const o=lerpColor("#ff3b30","#34c759",r);$("#camera-feed").css("border-color",o),$("#wrapper").css("background-color",hexToRGB(o,.3)),$("#value-slider").slider("value",a),hasScore()}else $("#wrapper").css("background-color",hexToRGB("#eeeeee",.3)),hasNoScore()}function setupSliders(){$("#value-slider").slider({min:0,max:1,step:.01,value:.5,disable:!0,animate:!0}),$("#range-slider").slider({range:!0,min:0,max:1,step:.01,values:[0,.9],slide(){updateUi()}})}function unsupportedBrowser(){$("#unsupported-overlay").removeClass("hidden")}function drawCroppedVideo(e,t,a,r,o,s,n){const i=o-n,d=s-n,l=2*n,c=2*n,u=0,p=0,m=128,f=128,g=Math.max(i,0),h=Math.min(i+l,a),v=Math.max(d,0),$=Math.min(d+c,r),S=m/l,b=f/c;e.fillStyle="black",e.fillRect(0,0,128,128),e.drawImage(t,g,v,h-g,$-v,i<0?u-i*S:u,d<0?p-d*b:p,(h-g)*S,($-v)*b)}function updateScore(e){score=null==score||null==e?e:.5*score+.5*e,updateUi()}async function processStream(){const e=await blazeface.load(),t=await tf.loadLayersModel("tfjs_model/model.json"),a=document.querySelector("video"),r=await e.estimateFaces(a);if(r.length>0){const e=r[0],{videoWidth:o}=a,{videoHeight:s}=a,n=e.topLeft[0],i=e.topLeft[1],d=e.bottomRight[0]-n,l=e.bottomRight[1]-i,c=2*Math.sqrt(d*l),u=n+d/2,p=i+l,m=document.getElementById("canvas");drawCroppedVideo(m.getContext("2d"),a,o,s,u,p,c);const f=tf.browser.fromPixels(m).div(255).expandDims(0),g=await t.predict(f);updateScore(g?g.dataSync()[0]:null)}requestAnimationFrame(processStream)}let score=null;$((()=>{if(setupSliders(),updateUi(),navigator.mediaDevices.getUserMedia){const e={video:!0};navigator.mediaDevices.getUserMedia(e).then((e=>{const t=document.querySelector("video");t.srcObject=e,t.addEventListener("loadeddata",(()=>{processStream()}))})).catch((()=>{unsupportedBrowser()}))}else unsupportedBrowser()}));